REPORT zprg1_alv_27.

TYPES: BEGIN OF lty_vbak,
         vbeln TYPE vbeln_va,
         erdat TYPE erdat,
         erzet TYPE erzet,
         ernam TYPE ernam,
         vbtyp TYPE vbtyp,
       END OF lty_vbak.
DATA: lt_vbak TYPE TABLE OF lty_vbak,
      ls_vbak TYPE lty_vbak.

TYPES: BEGIN OF lty_vbap,
         vbeln TYPE vbeln_va,
         posnr TYPE posnr_va,
         matnr TYPE matnr,
       END OF lty_vbap.
DATA: lt_vbap TYPE TABLE OF lty_vbap,
      ls_vbap TYPE lty_vbap.

DATA: lv_vbeln TYPE vbeln_va.
SELECT-OPTIONS: s_vbeln FOR lv_vbeln.

SELECT vbeln erdat erzet ernam vbtyp FROM vbak INTO TABLE lt_vbak WHERE vbeln IN s_vbeln.

*LOOP AT lt_vbak INTO ls_vbak.
*      WRITE: / ls_vbak-VBELN, ls_vbak-ERDAT, ls_vbak-ERZET, ls_vbak-ERNAM, ls_vbak-VBTYP.
*ENDLOOP.

IF lt_vbak IS NOT INITIAL.
SELECT vbeln posnr matnr FROM vbap INTO TABLE lt_vbap FOR ALL ENTRIES IN lt_vbak where vbeln = lt_vbak-vbeln.
ENDIF.

*LOOP AT lt_vbap INTO ls_vbap.
*      WRITE: / ls_vbap-VBELN, ls_vbap-POSNR, ls_vbap-MATNR.
*ENDLOOP.

DATA: lt_fieldcatalog TYPE SLIS_T_FIELDCAT_ALV.

CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
 EXPORTING
*   I_PROGRAM_NAME               =
*   I_INTERNAL_TABNAME           =
   I_STRUCTURE_NAME             = 'ZSTR_SALES_27'
*   I_CLIENT_NEVER_DISPLAY       = 'X'
*   I_INCLNAME                   =
*   I_BYPASSING_BUFFER           =
*   I_BUFFER_ACTIVE              =
  CHANGING
    ct_fieldcat                  = lt_fieldcatalog
 EXCEPTIONS
   INCONSISTENT_INTERFACE       = 1
   PROGRAM_ERROR                = 2
   OTHERS                       = 3
          .
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.

DATA: lt_final TYPE TABLE OF zstr_sales_27,
      ls_final TYPE zstr_sales_27.

LOOP AT lt_vbak INTO ls_vbak.
  LOOP AT lt_vbap INTO ls_vbap where vbeln = ls_vbak-vbeln.
ls_final-vbeln = ls_vbak-vbeln.
ls_final-erdat = ls_vbak-erdat.
ls_final-ERZET = ls_vbak-ERZET.
ls_final-ERNAM = ls_vbak-ERNAM.
ls_final-VBTYP = ls_vbak-VBTYP.
ls_final-posnr = ls_vbap-posnr.
ls_final-matnr = ls_vbap-matnr.
APPEND ls_final TO lt_final.
clear: ls_final.
  ENDLOOP.
ENDLOOP.

CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
 EXPORTING
*   I_INTERFACE_CHECK              = ' '
*   I_BYPASSING_BUFFER             =
*   I_BUFFER_ACTIVE                = ' '
*   I_CALLBACK_PROGRAM             = ' '
*   I_CALLBACK_PF_STATUS_SET       = ' '
*   I_CALLBACK_USER_COMMAND        = ' '
*   I_STRUCTURE_NAME               =
*   IS_LAYOUT                      =
   IT_FIELDCAT                    = lt_fieldcatalog
*   IT_EXCLUDING                   =
*   IT_SPECIAL_GROUPS              =
*   IT_SORT                        =
*   IT_FILTER                      =
*   IS_SEL_HIDE                    =
*   I_DEFAULT                      = 'X'
*   I_SAVE                         = ' '
*   IS_VARIANT                     =
*   IT_EVENTS                      =
*   IT_EVENT_EXIT                  =
*   IS_PRINT                       =
*   IS_REPREP_ID                   =
*   I_SCREEN_START_COLUMN          = 0
*   I_SCREEN_START_LINE            = 0
*   I_SCREEN_END_COLUMN            = 0
*   I_SCREEN_END_LINE              = 0
*   IR_SALV_LIST_ADAPTER           =
*   IT_EXCEPT_QINFO                =
*   I_SUPPRESS_EMPTY_DATA          = ABAP_FALSE
* IMPORTING
*   E_EXIT_CAUSED_BY_CALLER        =
*   ES_EXIT_CAUSED_BY_USER         =
  TABLES
    t_outtab                       = lt_final
* EXCEPTIONS
*   PROGRAM_ERROR                  = 1
*   OTHERS                         = 2
          .
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.
