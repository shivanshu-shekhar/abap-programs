REPORT zprg3_alv_27_sort.

TYPES: BEGIN OF lty_vbak,
         vbeln TYPE vbeln_va,
         erdat TYPE erdat,
         erzet TYPE erzet,
         ernam TYPE ernam,
         vbtyp TYPE vbtyp,
       END OF lty_vbak.
DATA: lt_vbak TYPE TABLE OF lty_vbak,
      ls_vbak TYPE lty_vbak.

TYPES: BEGIN OF lty_vbap,
         vbeln TYPE vbeln_va,
         posnr TYPE posnr_va,
         matnr TYPE matnr,
       END OF lty_vbap.
DATA: lt_vbap TYPE TABLE OF lty_vbap,
      ls_vbap TYPE lty_vbap.

DATA: lv_vbeln TYPE vbeln_va.
SELECT-OPTIONS: s_vbeln FOR lv_vbeln.

SELECT vbeln erdat erzet ernam vbtyp FROM vbak INTO TABLE lt_vbak WHERE vbeln IN s_vbeln.

*LOOP AT lt_vbak INTO ls_vbak.
*      WRITE: / ls_vbak-VBELN, ls_vbak-ERDAT, ls_vbak-ERZET, ls_vbak-ERNAM, ls_vbak-VBTYP.
*ENDLOOP.

IF lt_vbak IS NOT INITIAL.
SELECT vbeln posnr matnr FROM vbap INTO TABLE lt_vbap FOR ALL ENTRIES IN lt_vbak where vbeln = lt_vbak-vbeln.
ENDIF.

*LOOP AT lt_vbap INTO ls_vbap.
*      WRITE: / ls_vbap-VBELN, ls_vbap-POSNR, ls_vbap-MATNR.
*ENDLOOP.

DATA: lt_fieldcatalog TYPE SLIS_T_FIELDCAT_ALV,
      ls_fieldcatalog TYPE slis_fieldcat_alv.

*CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
* EXPORTING
**   I_PROGRAM_NAME               =
**   I_INTERNAL_TABNAME           =
*   I_STRUCTURE_NAME             = 'ZSTR_SALES_27'
**   I_CLIENT_NEVER_DISPLAY       = 'X'
**   I_INCLNAME                   =
**   I_BYPASSING_BUFFER           =
**   I_BUFFER_ACTIVE              =
*  CHANGING
*    ct_fieldcat                  = lt_fieldcatalog
* EXCEPTIONS
*   INCONSISTENT_INTERFACE       = 1
*   PROGRAM_ERROR                = 2
*   OTHERS                       = 3
*          .
*IF sy-subrc <> 0.
** Implement suitable error handling here
*ENDIF.

DATA: lt_final TYPE TABLE OF zstr_sales_27,
      ls_final TYPE zstr_sales_27.

ls_fieldcatalog-col_pos = 1.
ls_fieldcatalog-fieldname = 'VBELN'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Sales Document Number'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 2.
ls_fieldcatalog-fieldname = 'ERDAT'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Date on Which Record Was Created'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 3.
ls_fieldcatalog-fieldname = 'ERZET'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Entry time'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 4.
ls_fieldcatalog-fieldname = 'ERNAM'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Name of Person who Created the Object'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 5.
ls_fieldcatalog-fieldname = 'VBTYP'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'SD document category'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 6.
ls_fieldcatalog-fieldname = 'POSNR'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Sales Document Item'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 7.
ls_fieldcatalog-fieldname = 'MATNR'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Material Number'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.


LOOP AT lt_vbak INTO ls_vbak.
  LOOP AT lt_vbap INTO ls_vbap where vbeln = ls_vbak-vbeln.
ls_final-vbeln = ls_vbak-vbeln.
ls_final-erdat = ls_vbak-erdat.
ls_final-ERZET = ls_vbak-ERZET.
ls_final-ERNAM = ls_vbak-ERNAM.
ls_final-VBTYP = ls_vbak-VBTYP.
ls_final-posnr = ls_vbap-posnr.
ls_final-matnr = ls_vbap-matnr.
APPEND ls_final TO lt_final.
clear: ls_final.
  ENDLOOP.
ENDLOOP.

**internal table and workarea for sorting
DATA: lt_sort TYPE slis_t_sortinfo_alv,
      ls_sort TYPE slis_sortinfo_alv.
** fieldname and (up & down) (ascending and descending)
ls_sort-fieldname = 'ERDAT'.
 ls_sort-down = 'X'. " descending
* ls_sort-up = 'X'.  " ascending
APPEND ls_sort TO lt_sort.
clear: ls_sort.


CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
 EXPORTING
*   I_INTERFACE_CHECK                 = ' '
*   I_BYPASSING_BUFFER                = ' '
*   I_BUFFER_ACTIVE                   = ' '
*   I_CALLBACK_PROGRAM                = ' '
*   I_CALLBACK_PF_STATUS_SET          = ' '
*   I_CALLBACK_USER_COMMAND           = ' '
*   I_CALLBACK_TOP_OF_PAGE            = ' '
*   I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*   I_CALLBACK_HTML_END_OF_LIST       = ' '
*   I_STRUCTURE_NAME                  =
*   I_BACKGROUND_ID                   = ' '
*   I_GRID_TITLE                      =
*   I_GRID_SETTINGS                   =
*   IS_LAYOUT                         =
   IT_FIELDCAT                       = lt_fieldcatalog
*   IT_EXCLUDING                      =
*   IT_SPECIAL_GROUPS                 =
   IT_SORT                           = lt_sort
*   IT_FILTER                         =
*   IS_SEL_HIDE                       =
*   I_DEFAULT                         = 'X'
*   I_SAVE                            = ' '
*   IS_VARIANT                        =
*   IT_EVENTS                         =
*   IT_EVENT_EXIT                     =
*   IS_PRINT                          =
*   IS_REPREP_ID                      =
*   I_SCREEN_START_COLUMN             = 0
*   I_SCREEN_START_LINE               = 0
*   I_SCREEN_END_COLUMN               = 0
*   I_SCREEN_END_LINE                 = 0
*   I_HTML_HEIGHT_TOP                 = 0
*   I_HTML_HEIGHT_END                 = 0
*   IT_ALV_GRAPHICS                   =
*   IT_HYPERLINK                      =
*   IT_ADD_FIELDCAT                   =
*   IT_EXCEPT_QINFO                   =
*   IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*   E_EXIT_CAUSED_BY_CALLER           =
*   ES_EXIT_CAUSED_BY_USER            =
  TABLES
    t_outtab                          = lt_final
* EXCEPTIONS
*   PROGRAM_ERROR                     = 1
*   OTHERS                            = 2
          .
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
REPORT zprg3_alv_27_filter.

TYPES: BEGIN OF lty_vbak,
         vbeln TYPE vbeln_va,
         erdat TYPE erdat,
         erzet TYPE erzet,
         ernam TYPE ernam,
         vbtyp TYPE vbtyp,
       END OF lty_vbak.
DATA: lt_vbak TYPE TABLE OF lty_vbak,
      ls_vbak TYPE lty_vbak.

TYPES: BEGIN OF lty_vbap,
         vbeln TYPE vbeln_va,
         posnr TYPE posnr_va,
         matnr TYPE matnr,
       END OF lty_vbap.
DATA: lt_vbap TYPE TABLE OF lty_vbap,
      ls_vbap TYPE lty_vbap.

DATA: lv_vbeln TYPE vbeln_va.
SELECT-OPTIONS: s_vbeln FOR lv_vbeln.

SELECT vbeln erdat erzet ernam vbtyp FROM vbak INTO TABLE lt_vbak WHERE vbeln IN s_vbeln.

*LOOP AT lt_vbak INTO ls_vbak.
*      WRITE: / ls_vbak-VBELN, ls_vbak-ERDAT, ls_vbak-ERZET, ls_vbak-ERNAM, ls_vbak-VBTYP.
*ENDLOOP.

IF lt_vbak IS NOT INITIAL.
SELECT vbeln posnr matnr FROM vbap INTO TABLE lt_vbap FOR ALL ENTRIES IN lt_vbak where vbeln = lt_vbak-vbeln.
ENDIF.

*LOOP AT lt_vbap INTO ls_vbap.
*      WRITE: / ls_vbap-VBELN, ls_vbap-POSNR, ls_vbap-MATNR.
*ENDLOOP.

DATA: lt_fieldcatalog TYPE SLIS_T_FIELDCAT_ALV,
      ls_fieldcatalog TYPE slis_fieldcat_alv.

*CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
* EXPORTING
**   I_PROGRAM_NAME               =
**   I_INTERNAL_TABNAME           =
*   I_STRUCTURE_NAME             = 'ZSTR_SALES_27'
**   I_CLIENT_NEVER_DISPLAY       = 'X'
**   I_INCLNAME                   =
**   I_BYPASSING_BUFFER           =
**   I_BUFFER_ACTIVE              =
*  CHANGING
*    ct_fieldcat                  = lt_fieldcatalog
* EXCEPTIONS
*   INCONSISTENT_INTERFACE       = 1
*   PROGRAM_ERROR                = 2
*   OTHERS                       = 3
*          .
*IF sy-subrc <> 0.
** Implement suitable error handling here
*ENDIF.

DATA: lt_final TYPE TABLE OF zstr_sales_27,
      ls_final TYPE zstr_sales_27.

ls_fieldcatalog-col_pos = 1.
ls_fieldcatalog-fieldname = 'VBELN'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Sales Document Number'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 2.
ls_fieldcatalog-fieldname = 'ERDAT'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Date on Which Record Was Created'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 3.
ls_fieldcatalog-fieldname = 'ERZET'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Entry time'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 4.
ls_fieldcatalog-fieldname = 'ERNAM'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Name of Person who Created the Object'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 5.
ls_fieldcatalog-fieldname = 'VBTYP'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'SD document category'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 6.
ls_fieldcatalog-fieldname = 'POSNR'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Sales Document Item'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 7.
ls_fieldcatalog-fieldname = 'MATNR'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Material Number'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.


LOOP AT lt_vbak INTO ls_vbak.
  LOOP AT lt_vbap INTO ls_vbap where vbeln = ls_vbak-vbeln.
ls_final-vbeln = ls_vbak-vbeln.
ls_final-erdat = ls_vbak-erdat.
ls_final-ERZET = ls_vbak-ERZET.
ls_final-ERNAM = ls_vbak-ERNAM.
ls_final-VBTYP = ls_vbak-VBTYP.
ls_final-posnr = ls_vbap-posnr.
ls_final-matnr = ls_vbap-matnr.
APPEND ls_final TO lt_final.
clear: ls_final.
  ENDLOOP.
ENDLOOP.

DATA: lt_filter type slis_t_filter_alv,
      ls_filter type slis_filter_alv.
*ls_filter-fieldname = 'ERNAM'.
*ls_filter-tabname = 'LT_FINAL'.
*ls_filter-sign0 = 'I'.
*ls_filter-optio = 'EQ'.
*ls_filter-valuf_int = 'SAP_YOGIK'.   " low or from
**ls_filter-valut_int =               " high or to
*APPEND ls_filter TO lt_filter.
*clear: ls_filter.

ls_filter-fieldname = 'VBTYP'.
ls_filter-tabname = 'LT_FINAL'.
ls_filter-sign0 = 'I'.
ls_filter-optio = 'BT'.
ls_filter-valuf_int = 'A'.   " low or from
ls_filter-valut_int = 'C'.              " high or to
APPEND ls_filter TO lt_filter.
clear: ls_filter.

ls_filter-fieldname = 'MATNR'.
ls_filter-tabname = 'LT_FINAL'.
ls_filter-sign0 = 'E'.
ls_filter-optio = 'EQ'.
ls_filter-valuf_int = '000000000000000274'.   " low or from
*ls_filter-valut_int =               " high or to
APPEND ls_filter TO lt_filter.
clear: ls_filter.


CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
 EXPORTING
*   I_INTERFACE_CHECK                 = ' '
*   I_BYPASSING_BUFFER                = ' '
*   I_BUFFER_ACTIVE                   = ' '
*   I_CALLBACK_PROGRAM                = ' '
*   I_CALLBACK_PF_STATUS_SET          = ' '
*   I_CALLBACK_USER_COMMAND           = ' '
*   I_CALLBACK_TOP_OF_PAGE            = ' '
*   I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*   I_CALLBACK_HTML_END_OF_LIST       = ' '
*   I_STRUCTURE_NAME                  =
*   I_BACKGROUND_ID                   = ' '
*   I_GRID_TITLE                      =
*   I_GRID_SETTINGS                   =
*   IS_LAYOUT                         =
   IT_FIELDCAT                       = lt_fieldcatalog
*   IT_EXCLUDING                      =
*   IT_SPECIAL_GROUPS                 =
*   IT_SORT                           =
   IT_FILTER                         = lt_filter
*   IS_SEL_HIDE                       =
*   I_DEFAULT                         = 'X'
*   I_SAVE                            = ' '
*   IS_VARIANT                        =
*   IT_EVENTS                         =
*   IT_EVENT_EXIT                     =
*   IS_PRINT                          =
*   IS_REPREP_ID                      =
*   I_SCREEN_START_COLUMN             = 0
*   I_SCREEN_START_LINE               = 0
*   I_SCREEN_END_COLUMN               = 0
*   I_SCREEN_END_LINE                 = 0
*   I_HTML_HEIGHT_TOP                 = 0
*   I_HTML_HEIGHT_END                 = 0
*   IT_ALV_GRAPHICS                   =
*   IT_HYPERLINK                      =
*   IT_ADD_FIELDCAT                   =
*   IT_EXCEPT_QINFO                   =
*   IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*   E_EXIT_CAUSED_BY_CALLER           =
*   ES_EXIT_CAUSED_BY_USER            =
  TABLES
    t_outtab                          = lt_final
* EXCEPTIONS
*   PROGRAM_ERROR                     = 1
*   OTHERS                            = 2
          .
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
REPORT zprg3_alv_27_top_of_page.

TYPES: BEGIN OF lty_vbak,
         vbeln TYPE vbeln_va,
         erdat TYPE erdat,
         erzet TYPE erzet,
         ernam TYPE ernam,
         vbtyp TYPE vbtyp,
       END OF lty_vbak.
DATA: lt_vbak TYPE TABLE OF lty_vbak,
      ls_vbak TYPE lty_vbak.

TYPES: BEGIN OF lty_vbap,
         vbeln TYPE vbeln_va,
         posnr TYPE posnr_va,
         matnr TYPE matnr,
       END OF lty_vbap.
DATA: lt_vbap TYPE TABLE OF lty_vbap,
      ls_vbap TYPE lty_vbap.

DATA: lv_vbeln TYPE vbeln_va.
SELECT-OPTIONS: s_vbeln FOR lv_vbeln.

SELECT vbeln erdat erzet ernam vbtyp FROM vbak INTO TABLE lt_vbak WHERE vbeln IN s_vbeln.

IF lt_vbak IS NOT INITIAL.
SELECT vbeln posnr matnr FROM vbap INTO TABLE lt_vbap FOR ALL ENTRIES IN lt_vbak where vbeln = lt_vbak-vbeln.
ENDIF.

DATA: lt_fieldcatalog TYPE SLIS_T_FIELDCAT_ALV,
      ls_fieldcatalog TYPE slis_fieldcat_alv.

DATA: lt_final TYPE TABLE OF zstr_sales_27,
      ls_final TYPE zstr_sales_27.

ls_fieldcatalog-col_pos = 1.
ls_fieldcatalog-fieldname = 'VBELN'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Sales Document Number'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 2.
ls_fieldcatalog-fieldname = 'ERDAT'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Date on Which Record Was Created'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 3.
ls_fieldcatalog-fieldname = 'ERZET'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Entry time'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 4.
ls_fieldcatalog-fieldname = 'ERNAM'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Name of Person who Created the Object'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 5.
ls_fieldcatalog-fieldname = 'VBTYP'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'SD document category'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 6.
ls_fieldcatalog-fieldname = 'POSNR'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Sales Document Item'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.

ls_fieldcatalog-col_pos = 7.
ls_fieldcatalog-fieldname = 'MATNR'.
ls_fieldcatalog-tabname = 'LT_FINAL'.
ls_fieldcatalog-seltext_l = 'Material Number'.
APPEND ls_fieldcatalog to lt_fieldcatalog.
CLEAR: ls_fieldcatalog.


LOOP AT lt_vbak INTO ls_vbak.
  LOOP AT lt_vbap INTO ls_vbap where vbeln = ls_vbak-vbeln.
ls_final-vbeln = ls_vbak-vbeln.
ls_final-erdat = ls_vbak-erdat.
ls_final-ERZET = ls_vbak-ERZET.
ls_final-ERNAM = ls_vbak-ERNAM.
ls_final-VBTYP = ls_vbak-VBTYP.
ls_final-posnr = ls_vbap-posnr.
ls_final-matnr = ls_vbap-matnr.
APPEND ls_final TO lt_final.
clear: ls_final.
  ENDLOOP.
ENDLOOP.

DATA: lt_list TYPE slis_t_listheader,
      ls_list TYPE slis_listheader.

DATA: lv_input TYPE STRING.

DATA: lv_lines(5) TYPE C.
*PERFORM TOP_PAGE.

CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
 EXPORTING
*   I_INTERFACE_CHECK                 = ' '
*   I_BYPASSING_BUFFER                = ' '
*   I_BUFFER_ACTIVE                   = ' '
   I_CALLBACK_PROGRAM                = sy-repid
*   I_CALLBACK_PF_STATUS_SET          = ' '
*   I_CALLBACK_USER_COMMAND           = ' '
   I_CALLBACK_TOP_OF_PAGE            = 'TOP_PAGE'
*   I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*   I_CALLBACK_HTML_END_OF_LIST       = ' '
*   I_STRUCTURE_NAME                  =
*   I_BACKGROUND_ID                   = ' '
*   I_GRID_TITLE                      =
*   I_GRID_SETTINGS                   =
*   IS_LAYOUT                         =
   IT_FIELDCAT                       = lt_fieldcatalog
*   IT_EXCLUDING                      =
*   IT_SPECIAL_GROUPS                 =
*   IT_SORT                           =
*   IT_FILTER                         =
*   IS_SEL_HIDE                       =
*   I_DEFAULT                         = 'X'
*   I_SAVE                            = ' '
*   IS_VARIANT                        =
*   IT_EVENTS                         =
*   IT_EVENT_EXIT                     =
*   IS_PRINT                          =
*   IS_REPREP_ID                      =
*   I_SCREEN_START_COLUMN             = 0
*   I_SCREEN_START_LINE               = 0
*   I_SCREEN_END_COLUMN               = 0
*   I_SCREEN_END_LINE                 = 0
*   I_HTML_HEIGHT_TOP                 = 0
*   I_HTML_HEIGHT_END                 = 0
*   IT_ALV_GRAPHICS                   =
*   IT_HYPERLINK                      =
*   IT_ADD_FIELDCAT                   =
*   IT_EXCEPT_QINFO                   =
*   IR_SALV_FULLSCREEN_ADAPTER        =
* IMPORTING
*   E_EXIT_CAUSED_BY_CALLER           =
*   ES_EXIT_CAUSED_BY_USER            =
  TABLES
    t_outtab                          = lt_final
* EXCEPTIONS
*   PROGRAM_ERROR                     = 1
*   OTHERS                            = 2
          .
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.
*&---------------------------------------------------------------------*
*&      Form  TOP_PAGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM top_page .
ls_list-typ = 'H'.
ls_list-info = 'Sales Order Display'.
APPEND ls_list TO lt_list.
CLEAR: ls_list.

CONCATENATE s_vbeln-low 'to' s_vbeln-high INTO lv_input SEPARATED BY space.
ls_list-typ = 'S'.
ls_list-key = 'Sales input'.
ls_list-info = lv_input.
APPEND ls_list TO lt_list.
CLEAR: ls_list.

CLEAR: lv_input.
DESCRIBE TABLE lt_final LINES lv_lines.
CONCATENATE 'Number of lines' lv_lines INTO lv_input SEPARATED BY space.
ls_list-typ = 'S'.
ls_list-info = lv_input.
APPEND ls_list TO lt_list.
CLEAR: ls_list.

CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
  EXPORTING
    it_list_commentary       = lt_list
*   I_LOGO                   =
*   I_END_OF_LIST_GRID       =
*   I_ALV_FORM               =
          .

ENDFORM.
